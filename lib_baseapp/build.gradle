//apply from: "config.gradle"

plugins {
//    id 'com.android.library'
//    id 'org.jetbrains.kotlin.android'
//    id 'kotlin-kapt'
    id 'maven-publish'
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {

        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),//配置并启用将数据库架构导出到给定目录中的 JSON 文件的功能
                        "room.incremental":"true", //启用 Gradle 增量注解处理器
                        "room.expandProjection":"true",//配置 Room 以重写查询，使其顶部星形投影在展开后仅包含 DAO 方法返回类型中定义的列
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {



    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["constraint-layout"]


    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["ext-junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]


//    api 'com.github.fuyuguang:retrofitNetwork:release_0.9.2'
    api project(':lib_network')


    api project(':lib_provider')
//    api project(':lib_comm')
    api project(':lib_dialog')
//    api project(':lib_bridge_jx')
    api project(':lib_database')

    implementation rootProject.ext.dependencies["kotlinx-coroutines-core"]
    implementation rootProject.ext.dependencies["kotlinx-coroutines-android"]



//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
//    implementation 'androidx.lifecycle:lifecycle-common:2.2.0'
//    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'
//
//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
//
//
//    implementation 'androidx.fragment:fragment-ktx:1.3.2'
//    implementation 'androidx.activity:activity-ktx:1.3.0-alpha08'
    // ViewModelScope
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
//    // liveData
//    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
//    //LifecycleScope
//    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
//
//    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")





    // Room
    implementation rootProject.ext.dependencies["room-runtime"]
    kapt rootProject.ext.dependencies["room-compiler"]
    // Kotlin Extensions and Coroutines support for Room
    implementation rootProject.ext.dependencies["room-ktx"]



    implementation rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]

}



group = "$jitpack_release_group"
version = "$jitpack_release_version"

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = "$jitpack_release_group"
                version = "$jitpack_release_version"
                artifactId = "$artifact_lib_baseapp_id"
            }
        }
    }
}
